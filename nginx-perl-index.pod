
=head1 NAME

nginx-perl - full-featured perl support for nginx

=head1 DOWNLOAD

L<nginx-perl-1.1.9.1-prerelease.tar.gz|http://zzzcpan.github.com/nginx-perl-1.1.9.1-prerelease.tar.gz> 659K 2011-12-05 00:38 

=head1 GITHUB

L<https://github.com/zzzcpan/nginx-perl>

=head1 DESCRIPTION

nginx-perl is a high-performance asynchronous perl web server.
It is designed to provide some level of access to nginx's event loop
from embedded perl. And not just some, but with simplicity in mind.

=head2 FASTER THAN NODE.JS

Asynchronous API is designed to be both simple and fast. Even though
simplicity was the goal, nginx-perl can easily beat node.js in performance.
To verify there is a simple redis-based application for both node.js and 
nginx-perl. 

=head2 FIRST-CLASS HTTP SERVER

It's nginx. Nothing can compete with this.

And it's not just about HTTP protocol, it is also out of the box 
process management, logging, security and lots of various 3rd party 
modules available for nginx.

=head2 SMP OUT OF THE BOX

Nginx allows you to start as many workers as you need. Easy to scale.

=head2 SIMPLE BUT POWERFUL

nginx-perl does actual reading and writing but leaves flow control 
completely up to us. So we can focus on the thing that we want to do
rather than dealing with syscalls.

Here is an example of low-level asynchronous HTTP request:

    ngx_connector '1.2.3.4', 80, 15, sub {
        return NGX_CLOSE                # close connection
              if  $!;                   # on error
        
        my $c   = shift;
        my $buf = "GET /" . "\x0d\x0a";
        
        ngx_writer $c, $buf, 15, sub {
            return NGX_CLOSE            # close connection
                  if  $!;               # on error
            
            $buf = '';                  # clear buffer
            
            return NGX_READ;		# start reading response
        };
        
        ngx_reader $c, $buf, 0, 0, 15, sub {
            return NGX_CLOSE            # close connection
                  if  $!;               # on any error, incl. EOF
            
            warn "buf = '$buf'\n";
            
            $buf = '';                  # clear buffer 
            
            return NGX_READ;            # read again
        };        
        
        return NGX_WRITE;               # send request
    };

=head2 FEATURES

=over 4

=item full official nginx perl API;

=item asynchronous connections (ngx_connector, ngx_reader, ngx_writer);

=item timer (ngx_timer);

=item SSL without cached sessions (ngx_ssl_handshaker);

=item simple resolver (ngx_resolver);

=item access handlers (perl_access);

=item app handlers (perl_app);

=item configuration level eval (perl_eval);

=item init_worker, exit_worker handlers (perl_init_worker, perl_exit_worker);

=item client connection takeover for websockets, etc;

=back



=cut

